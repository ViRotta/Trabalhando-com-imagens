# -*- coding: utf-8 -*-
"""trabalho final

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HBaCBerx3Hi-2lMFhoSDb3WIHnis8XgK

# Atividades

redução das imagens coloridas
"""

from PIL import Image
import matplotlib.pyplot as plt

# Carregar a imagem original
imagem_original = Image.open("Lena_Colorida.jpg")

# Reduzir em 50%
imagem_reduzida_50 = imagem_original.resize((430, 274))

# Reduzir em 25%
imagem_reduzida_25 = imagem_original.resize((215, 137))

# Reduzir em 12.5%
imagem_reduzida_12_5 = imagem_original.resize((108, 69))

# Reduzir em 6.25%
imagem_reduzida_6_25 = imagem_original.resize((54, 35))

# Salvar as imagens reduzidas
imagem_reduzida_50.save("imagem_reduzida_50.jpg")
imagem_reduzida_25.save("imagem_reduzida_25.jpg")
imagem_reduzida_12_5.save("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25.save("imagem_reduzida_6_25.jpg")


# Carregar as imagens reduzidas
imagem_reduzida_50 = Image.open("imagem_reduzida_50.jpg")
imagem_reduzida_25 = Image.open("imagem_reduzida_25.jpg")
imagem_reduzida_12_5 = Image.open("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25 = Image.open("imagem_reduzida_6_25.jpg")

# Criar uma figura com 2 linhas e 2 colunas para exibir as imagens
fig, axs = plt.subplots(2, 2)

# Exibir a imagem reduzida em 50%
axs[0, 0].imshow(imagem_reduzida_50)
axs[0, 0].axis('off')
axs[0, 0].set_title("Redução 50%")

# Exibir a imagem reduzida em 25%
axs[0, 1].imshow(imagem_reduzida_25)
axs[0, 1].axis('off')
axs[0, 1].set_title("Redução 25%")

# Exibir a imagem reduzida em 12.5%
axs[1, 0].imshow(imagem_reduzida_12_5)
axs[1, 0].axis('off')
axs[1, 0].set_title("Redução 12.5%")

# Exibir a imagem reduzida em 6.25%
axs[1, 1].imshow(imagem_reduzida_6_25)
axs[1, 1].axis('off')
axs[1, 1].set_title("Redução 6.25%")

# Ajustar o espaçamento entre as imagens
plt.tight_layout()

# Exibir as imagens
plt.show()

"""interpolação das imagens coloridas"""

from PIL import Image
import matplotlib.pyplot as plt


# Carregar as imagens reduzidas
imagem_reduzida_50 = Image.open("imagem_reduzida_50.jpg")
imagem_reduzida_25 = Image.open("imagem_reduzida_25.jpg")
imagem_reduzida_12_5 = Image.open("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25 = Image.open("imagem_reduzida_6_25.jpg")

# Interpolar as imagens para voltar ao tamanho original
imagem_interpolada_50 = imagem_reduzida_50.resize((860, 547), Image.BILINEAR)
imagem_interpolada_25 = imagem_reduzida_25.resize((860, 547), Image.BILINEAR)
imagem_interpolada_12_5 = imagem_reduzida_12_5.resize((860, 547), Image.BILINEAR)
imagem_interpolada_6_25 = imagem_reduzida_6_25.resize((860, 547), Image.BILINEAR)

# Salvar as imagens interpoladas
imagem_interpolada_50.save("imagem_interpolada_50.jpg")
imagem_interpolada_25.save("imagem_interpolada_25.jpg")
imagem_interpolada_12_5.save("imagem_interpolada_12_5.jpg")
imagem_interpolada_6_25.save("imagem_interpolada_6_25.jpg")

# Carregar as imagens interpoladas
imagem_interpolada_50 = Image.open("imagem_interpolada_50.jpg")
imagem_interpolada_25 = Image.open("imagem_interpolada_25.jpg")
imagem_interpolada_12_5 = Image.open("imagem_interpolada_12_5.jpg")
imagem_interpolada_6_25 = Image.open("imagem_interpolada_6_25.jpg")

# Criar uma figura com 2 linhas e 2 colunas para exibir as imagens
fig, axs = plt.subplots(2, 2)

# Exibir a imagem interpolada em 50%
axs[0, 0].imshow(imagem_interpolada_50)
axs[0, 0].axis('off')
axs[0, 0].set_title("Interpolação 50%")

# Exibir a imagem interpolada em 25%
axs[0, 1].imshow(imagem_interpolada_25)
axs[0, 1].axis('off')
axs[0, 1].set_title("Interpolação 25%")

# Exibir a imagem interpolada em 12.5%
axs[1, 0].imshow(imagem_interpolada_12_5)
axs[1, 0].axis('off')
axs[1, 0].set_title("Interpolação 12.5%")

# Exibir a imagem interpolada em 6.25%
axs[1, 1].imshow(imagem_interpolada_6_25)
axs[1, 1].axis('off')
axs[1, 1].set_title("Interpolação 6.25%")

# Ajustar o espaçamento entre as imagens
plt.tight_layout()

# Exibir as imagens
plt.show()

"""redução da imagem colorida"""

from PIL import Image
import matplotlib.pyplot as plt

# Carregar a imagem original
imagem_original = Image.open("Lena_Colorida.jpg")

# Converter a imagem para preto e branco
imagem_pb = imagem_original.convert("L")

# Reduzir em 50%
imagem_reduzida_50 = imagem_pb.resize((430, 274))

# Reduzir em 25%
imagem_reduzida_25 = imagem_pb.resize((215, 137))

# Reduzir em 12.5%
imagem_reduzida_12_5 = imagem_pb.resize((108, 69))

# Reduzir em 6.25%
imagem_reduzida_6_25 = imagem_pb.resize((54, 35))

# Salvar as imagens reduzidas
imagem_reduzida_50.save("imagem_reduzida_50.jpg")
imagem_reduzida_25.save("imagem_reduzida_25.jpg")
imagem_reduzida_12_5.save("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25.save("imagem_reduzida_6_25.jpg")


# Carregar as imagens reduzidas
imagem_reduzida_50 = Image.open("imagem_reduzida_50.jpg")
imagem_reduzida_25 = Image.open("imagem_reduzida_25.jpg")
imagem_reduzida_12_5 = Image.open("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25 = Image.open("imagem_reduzida_6_25.jpg")

# Criar uma figura com 2 linhas e 2 colunas para exibir as imagens
fig, axs = plt.subplots(2, 2)

# Exibir a imagem reduzida em 50%
axs[0, 0].imshow(imagem_reduzida_50, cmap='gray')
axs[0, 0].axis('off')
axs[0, 0].set_title("Redução 50%")

# Exibir a imagem reduzida em 25%
axs[0, 1].imshow(imagem_reduzida_25, cmap='gray')
axs[0, 1].axis('off')
axs[0, 1].set_title("Redução 25%")

# Exibir a imagem reduzida em 12.5%
axs[1, 0].imshow(imagem_reduzida_12_5, cmap='gray')
axs[1, 0].axis('off')
axs[1, 0].set_title("Redução 12.5%")

# Exibir a imagem reduzida em 6.25%
axs[1, 1].imshow(imagem_reduzida_6_25, cmap='gray')
axs[1, 1].axis('off')
axs[1, 1].set_title("Redução 6.25%")

# Ajustar o espaçamento entre as imagens
plt.tight_layout()

# Exibir as imagens
plt.show()

"""interpolação das imagens preto e branco"""

from PIL import Image
import matplotlib.pyplot as plt

# Carregar as imagens reduzidas
imagem_reduzida_50 = Image.open("imagem_reduzida_50.jpg")
imagem_reduzida_25 = Image.open("imagem_reduzida_25.jpg")
imagem_reduzida_12_5 = Image.open("imagem_reduzida_12_5.jpg")
imagem_reduzida_6_25 = Image.open("imagem_reduzida_6_25.jpg")

# Interpolar as imagens para voltar ao tamanho original
imagem_interpolada_50 = imagem_reduzida_50.resize((860, 547), Image.BILINEAR)
imagem_interpolada_25 = imagem_reduzida_25.resize((860, 547), Image.BILINEAR)
imagem_interpolada_12_5 = imagem_reduzida_12_5.resize((860, 547), Image.BILINEAR)
imagem_interpolada_6_25 = imagem_reduzida_6_25.resize((860, 547), Image.BILINEAR)

# Salvar as imagens interpoladas
imagem_interpolada_50.save("imagem_interpolada_50.jpg")
imagem_interpolada_25.save("imagem_interpolada_25.jpg")
imagem_interpolada_12_5.save("imagem_interpolada_12_5.jpg")
imagem_interpolada_6_25.save("imagem_interpolada_6_25.jpg")


# Carregar as imagens interpoladas
imagem_interpolada_50 = Image.open("imagem_interpolada_50.jpg").convert("L")
imagem_interpolada_25 = Image.open("imagem_interpolada_25.jpg").convert("L")
imagem_interpolada_12_5 = Image.open("imagem_interpolada_12_5.jpg").convert("L")
imagem_interpolada_6_25 = Image.open("imagem_interpolada_6_25.jpg").convert("L")

# Criar uma figura com 2 linhas e 2 colunas para exibir as imagens
fig, axs = plt.subplots(2, 2)

# Exibir a imagem interpolada em 50%
axs[0, 0].imshow(imagem_interpolada_50, cmap='gray')
axs[0, 0].axis('off')
axs[0, 0].set_title("Interpolação 50%")

# Exibir a imagem interpolada em 25%
axs[0, 1].imshow(imagem_interpolada_25, cmap='gray')
axs[0, 1].axis('off')
axs[0, 1].set_title("Interpolação 25%")

# Exibir a imagem interpolada em 12.5%
axs[1, 0].imshow(imagem_interpolada_12_5, cmap='gray')
axs[1, 0].axis('off')
axs[1, 0].set_title("Interpolação 12.5%")

# Exibir a imagem interpolada em 6.25%
axs[1, 1].imshow(imagem_interpolada_6_25, cmap='gray')
axs[1, 1].axis('off')
axs[1, 1].set_title("Interpolação 6.25%")

# Ajustar o espaçamento entre as imagens
plt.tight_layout()

# Exibir as imagens
plt.show()